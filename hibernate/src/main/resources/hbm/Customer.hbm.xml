<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--
    default-lazy：
        指定未明确注明lazy属性的Java属性和集合类会采取的检索策略；
        如果指定为false则会使得默认的检索策略都为立即检索。默认为true
 -->
<hibernate-mapping default-lazy="true">

    <class name="com.univ.one2many.Customer" table="T_Customer">
        <id name="id" type="long" column="ID">
            <generator class="increment"></generator>
        </id>
        <property name="name" type="string" column="NAME"></property>

        <!-- 1. 建立和Order的一对多关系,只需要通过key标签指明是哪个外键即可；
             2. cascade="save-update":当保存和更新customer对象时会自动保存和更新与其关系的order对象;
        	 3. inverse="true":Customer端若只有orders属性发生变化(如customer.getOrders().add(order))，
        	    则Customer端不发出update语句,亦即customer.getOrders().add(order)不会对数据库作出任何改动。
        	 4. fetch:同时查询多个customer对象关联的所有order对象时，对Order查询发出的select语句的形式，没什么太大作用。
        	        select：默认值；
        	        subselect：采用子查询的select语句；
        	        join:采用左外连接的select语句；
        -->
        <set name="orders" cascade="save-update" inverse="true" fetch="select">
            <key column="CUSTOMER_ID"/>
            <one-to-many class="com.univ.one2many.Order"/>
        </set>
    </class>
</hibernate-mapping>
